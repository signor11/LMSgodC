<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="testResultDAO">
	
	<!-- 교수 성적 입력 -->
	<insert id="insertTestResult" parameterType="testResultVO">
	<selectKey keyProperty="testresultNum" resultType="string" order="BEFORE">
		SELECT nvl(max(SEQ),0)+1 FROM TESTRESULT
	</selectKey>
		INSERT INTO TESTRESULT (TESTRESULTNUM,
								TESTSCORE,
								TESTNUM,
								CLASSAPPLYNUM)
					VALUES (#{testresultNum},
							#{testScore},
							#{testNum},
							#{classapplyNum})
	</insert>
	
	<!-- 교수 성적 수정 -->
	<update id = "testResultUpdate" parameterType="testResultVO">
		UPDATE TESTRESULT 
		SET    TESTSCORE=#{testScore},
			   TESTNUM=#{testNum},
			   CLASSAPPLYNUM=#{classapplyNum},
			   STUDENTNUM=#{studentNum},
			   CLASSNUM=#{classNum}
			   WHERE TESTRESULTNUM=#{testresultNum}
	</update>
	
	<!-- 단건 조회 -->
	<select id="gettestresult" resultType="testResultVO">
		SELECT *
		FROM TESTRESULT
		WHERE  TESTRESULTNUM= #{testresultnum}
	</select>
	
	<!-- 교수 성적 조회 -->
	
	<select id="getBoardList" resultType="testResultVO">
		SELECT C.CLASSNUM,
			   C.CLASSAPPLYNUM,
			   C.STUDENTNUM,
			   C.SCORE,
			   TR.TESTRESULTNUM,
			   TR.TESTSCORE,
			   TR.TESTNUM,
			   S.STUDENTNAME,
			   GRADE_TOTAL(C.SCORE) AS GRADE,
			   SCORE_TOTAL(C.SCORE) AS SCORET
	   FROM CLASSAPPLY C JOIN STUDENT S 
			ON (S.STUDENTNUM = C.STUDENTNUM) 
			LEFT OUTER JOIN TESTRESULT TR 
			ON (C.CLASSAPPLYNUM = TR.CLASSAPPLYNUM)
	   WHERE 1=1 
	   <if test="professorNum != null and professorNum != ''">
			AND C.PROFESSORNUM = #{professornum}
	   </if>
 	  WHERE C.CLASSNUM = #{classnum}
	  ORDER BY CLASSAPPLYNUM
	</select>
	
	<!-- 학생 성적 조회 -->
	<select id="gettestresultListstu" resultType="testResultVO">
		SELECT C.CLASSNUM,
			   C.CLASSAPPLYNUM,
			   C.STUDENTNUM,
			   C.SCORE,
			   CL.CREDIT,
			   CL.CLASSNAME,
			   TR.TESTRESULTNUM,
			   TR.TESTSCORE,
			   TR.TESTNUM,
			   S.STUDENTNAME,
			   P.PROFESSORNAME,
			   GRADE_TOTAL(C.SCORE) AS GRADE,
			   SCORE_TOTAL(C.SCORE) AS SCORET
			   FROM CLASSAPPLY C JOIN TESTRESULT TR 
					ON (C.CLASSAPPLYNUM = TR.CLASSAPPLYNUM) 
					JOIN STUDENT S ON (S.STUDENTNUM = C.STUDENTNUM)
				    JOIN CLASS CL ON (C.CLASSNUM = CL.CLASSNUM)
				    JOIN PROFESSOR P ON (P.PROFESSORNUM = CL.PROFESSORNUM)
			  WHERE 1=1 
			   <if test="studentnum != null and studentnum != ''">
					AND S.STUDENTNUM = #{studentnum}
			   </if>
			   <if test="classname != null and classname != ''">
					AND CL.CLASSNAME = #{classname}
			   </if>
			   <if test="credit != null and credit != ''">
			   		AND CL.CREDIT = #{credit}	
			   </if>	
			   <if test="score != null and score != ''">
			   		AND C.SCORE = #{score}	
			   </if>
			   <if test="classapplynum != null and classapplynum != ''">
			   		AND C.CLASSAPPLNUM = #{classapplynum}	
			   </if>
			  ORDER BY CLASSAPPLYNUM
	</select>

</mapper>
